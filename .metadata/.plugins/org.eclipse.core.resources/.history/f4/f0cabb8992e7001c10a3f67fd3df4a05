package kr.ac.kopo.board.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import kr.ac.kopo.board.vo.BoardVO;
import kr.ac.kopo.util.ConnectionFactory;
import kr.ac.kopo.util.JDBCClose;


/**
 * t_board 테이블의 CRUD 담당 클래스 
 * 지금은 비즈니스 로직이 없으니까 교수님 마음대로 쓰심.
 */
public class BoardDAO {

	/**
	 * 전체게시글 조회 메소드를 쓰고 싶음.
	 * 
	 */
	public List<BoardVO> selectAll() {
		//나오는 레코드가 최소 0개부터 n개 있음. 여러 개의 레코드르 가져와야 하니까 배열이나 콜렉션 형태여야 함. 레코드 하나 하나 저장하는 단위가 vo클래스이므로
		//vo 클래스를 따로 만듦
		
		List<BoardVO> list = new ArrayList()<>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		
	
		
		
		try {
		
			conn = new ConnectionFactory().getConnection();
			StringBuilder sql = new StringBuilder();
			sql.append("select no, title, writer, to_char(reg_date, 'yyyy-mm-dd')as reg_date ");
			sql.append(" from t_board");
			sql.append(" order by no desc");
			pstmt = conn.prepareStatement(sql.toString());
			ResultSet rs = pstmt.executeQuery();
		
			
			while(rs.next()) {
				int no = rs.getInt("no");
				String title = rs.getString("title");
				String write = rs.getString("writer");
				String regDate = rs.getString("reg_date"); //숫자도 가져올 수 있게 해줌. 4이렇게 입력해서. 
			
			BoardVO board = new BoardVO();
			board.setNo(no);
			board.setTitle(title);
			board.setWriter(writer);
			board.setRegDate(regDate);
			
			list.add(board);
			}
			//추출하는 단위가 vo임 
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			JDBCClose.close(pstmt, conn);
		}
		return list;
	}
}
